@{ Layout = null;}
@using Dreamfly.JavaEstateCodeGenerator.Core
@model Dreamfly.JavaEstateCodeGenerator.Models.RenderEntity
/**
* @@author: @Model.Author.Name
* @@Date: @DateTime.Now.ToString("yyyy-MM-dd HH:mm")
* @@Email: @Model.Author.Email
* @@Description: @Model.Author.Remark
*/
@{
    var dtoTemplates = Model.EntityItems.Where(t=>t.InResponse);
    bool hasJsonField = Model.EntityItems.Any(t => t.Type == AppConstants.JsonMapType);
    bool hasDecimal = Model.EntityItems.Any(t => t.Type == "BigDecimal" && t.Length.HasValue);
}
package @(Model.ProjectPackagePath).@(Model.ProjectName)@(Model.ProjectHasApi?".api":"").dto.@(Model.EntityName.ToLower());

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import lombok.*;

import java.util.Date;
@if (hasJsonField)
{
@:import java.util.List;
}
@if (hasDecimal)
{
@:import java.math.BigDecimal;
}
@@Data
@@Builder
@@NoArgsConstructor
@@AllArgsConstructor
@@ApiModel(value = "@Html.Raw(Model.EntityDescription)返回表單")
public class @(Model.EntityName)Response {
    @@JsonSerialize(using = ToStringSerializer.class)
    @@ApiModelProperty(value = "編號")
    private Long id;
@foreach (var item in dtoTemplates)
{
if (!String.IsNullOrEmpty(item.Description))
{
    @:/**
    @:* @Html.Raw(item.Description)
    @:*/
    @:@@ApiModelProperty(value = "@Html.Raw(item.Description)")
}
    @:private @Html.Raw(item.Type) @item.Name;
}
}