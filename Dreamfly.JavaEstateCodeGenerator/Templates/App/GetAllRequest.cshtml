@{ Layout = null;}
@using Dreamfly.JavaEstateCodeGenerator.Models;
@using Dreamfly.JavaEstateCodeGenerator.Helper;
@model Dreamfly.JavaEstateCodeGenerator.Models.RenderEntity
/**
* @@author: @Model.Author.Name
* @@Email: @Model.Author.Email
* @@Description: @Model.Author.Remark
*/
@{
    var entityItems = Model.EntityItems.Where(t=>t.InQuery).OrderBy(t=>t.Order).ThenBy(t=>t.Name).ToList();
    var startDateItems=entityItems.Where(q=>q.Type=="Date").ToList();
    var endDateItems=entityItems.Where(q=>q.Type=="Date").ToList();
    bool hasDate = entityItems.Any(t => t.Type == "Date");
    if(startDateItems.Count()>0){
        entityItems.RemoveAll(t=>t.Type=="Date");
        startDateItems.ForEach(q=>{
            q.Name="start"+q.Name.ToPascalCase();
            q.Description="起始"+q.Description;
            entityItems.Add(q);
        });
        endDateItems.ForEach(q=>{
            q.Name="end"+q.Name.ToPascalCase();
            q.Description="訖止"+q.Description;
            entityItems.Add(q);
        });
        //entityItems=entityItems.OrderBy(t=>t.Order).ThenBy(t=>t.Name).ToList();
    }
}
package @(Model.ProjectPackagePath).@(Model.ProjectName)@(Model.ProjectHasApi?".api":"").dto.@(Model.EntityName.ToLower());

import @(Model.ProjectPackagePath).common.dto.PageAndSortRequest;
import lombok.*;
import lombok.experimental.SuperBuilder;
import com.fasterxml.jackson.annotation.JsonFormat;
import @(Model.ProjectPackagePath).common.config.AppConstant;
import java.util.Date;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.springframework.format.annotation.DateTimeFormat;

import javax.validation.constraints.Size;

@@Data
@@AllArgsConstructor
@@NoArgsConstructor
@@SuperBuilder
@@ApiModel(value = "@Html.Raw(Model.EntityDescription)查詢請求表單")
public class GetAll@(Model.EntityName)Request extends PageAndSortRequest {
@foreach (var item in entityItems)
{
if (!String.IsNullOrEmpty(item.Description))
{
    @:/**
    @:* @Html.Raw(item.Description)
    @:*/
    @:@@ApiModelProperty(value = "@Html.Raw(item.Description)")
}
if (item.Length.HasValue)
{
    @:@@Size(max = @item.Length)
}
if(item.Type=="Date"){
    @:@@DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
}
    @:private @item.Type @item.Name;
}
}

