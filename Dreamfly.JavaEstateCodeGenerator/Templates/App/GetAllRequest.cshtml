@{ Layout = null;}
@model Dreamfly.JavaEstateCodeGenerator.Models.RenderEntity
/**
* @@author: @Model.Author.Name
* @@Email: @Model.Author.Email
* @@Description: @Model.Author.Remark
*/
@{
    var dtoTemplates = Model.EntityItems.Where(t=>t.InQuery);
}
package @(Model.ProjectPackagePath).@(Model.ProjectName)@(Model.ProjectHasApi?".api":"").dto.@(Model.EntityName.ToLower());

import @(Model.ProjectPackagePath).common.dto.PageAndSortRequest;
import lombok.*;
import lombok.experimental.SuperBuilder;
import com.fasterxml.jackson.annotation.JsonFormat;
import @(Model.ProjectPackagePath).common.config.AppConstant;
import java.util.Date;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.Size;

@@Data
@@AllArgsConstructor
@@NoArgsConstructor
@@SuperBuilder
@@ApiModel(value = "@Html.Raw(Model.EntityDescription)多筆查詢表單")
public class GetAll@(Model.EntityName)Request extends PageAndSortRequest {
@foreach (var item in dtoTemplates)
{
if (!String.IsNullOrEmpty(item.Description))
{
    @:/**
    @:* @Html.Raw(item.Description)
    @:*/
    @:@@ApiModelProperty(value = "@Html.Raw(item.Description)")
}
if (item.Length.HasValue)
{
    @:@@Size(max = @item.Length)
}
if (item.Type=="Date")
{
    @:@@JsonFormat(timezone = AppConstant.DATE_FORMAT_TIMEZONE, pattern=@(item.HasTime?"AppConstant.DATE_FORMAT_DATETIME_PATTERN":"AppConstant.DATE_FORMAT_DATE_PATTERN"))
}
    @:private @item.Type @item.Name;
}
}

